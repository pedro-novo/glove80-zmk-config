/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers

#define DEFAULT 0
#define LOWER 1
#define MAGIC 2
#define FACTORY_TEST 3

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to

        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo 1>, <&to 1>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | RSHFT |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC  | DEL   | LALT  | | RALT  | RET   | SPACE |      |  UP   | DOWN  |  [   |   ]   | PGDN |

            bindings = <
&none             &none  &none  &none  &none                                                                                          &none  &none      &none    &none     &none
&none             &none  &none  &none  &none  &none                                                                            &none  &none  &none      &none    &none     &none
&kp TAB           &kp Q  &kp W  &kp E  &kp R  &kp T                                                                            &kp Y  &kp U  &kp I      &kp O    &kp P     &kp ESC
&kp LEFT_CONTROL  &kp A  &kp S  &kp D  &kp F  &kp G                                                                            &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C  &kp V  &kp B  &none             &none  &none           &none      &none          &none  &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
&none             &none  &none  &none  &none         &kp LEFT_COMMAND  &mo 1  &mt LALT ENTER  &kp SPACE  &kp BACKSPACE  &mo 2         &none  &none      &none    &none     &none
            >;
        };

        lower_layer {
            bindings = <
&none   &none            &none         &none         &none                                                                                       &none          &none         &none                 &none                  &none
&none   &none            &none         &none         &none         &none                                                         &none           &none          &none         &none                 &none                  &none
&trans  &kp EXCLAMATION  &kp AT_SIGN   &kp POUND     &kp DOLLAR    &kp PERCENT                                                   &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSLASH
&trans  &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5                                                  &kp KP_MINUS    &kp KP_EQUAL   &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&trans  &kp NUMBER_6     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none   &none   &none   &none   &none   &none   &kp UNDERSCORE  &kp PLUS       &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans
&none   &none            &none         &none         &none                       &trans  &trans  &trans  &trans  &trans  &trans                  &none          &none         &none                 &none                  &none
            >;
        };

        magic_layer {
            bindings = <
&none            &none            &none            &none              &none                                                                                       &none           &none         &none            &none    &none
&none            &none            &none            &none              &none            &none                                                            &none     &none           &none         &none            &none    &none
&bootloader      &kp F1           &kp F2           &kp F3             &kp F4           &kp F5                                                           &kp F6    &kp F7          &kp F8        &kp F9           &kp F10  &none
&bootloader      &kp C_PREVIOUS   &kp C_NEXT       &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PP                                                         &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none    &none
&rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI    &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &none   &none   &none   &none   &none   &none   &none     &none           &none         &none            &none    &trans
&none            &none            &none            &none              &none                             &trans  &trans  &trans  &trans  &trans  &trans            &none           &none         &none            &none    &none
            >;
        };
    };
};
